# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest -n 2 --html=test-report.html
        
#       - name: Upload test report
#         uses: actions/upload-artifact@v2
#         with:
#           name: Test Report
#           path: test-report.html
#           retention-days: 5
          
#       - name: Upload assets
#         uses: actions/upload-artifact@v2
#         with:
#           name: Assets
#           path: assets
#           retention-days: 5

      - name: Create test report archive
        run: |
          zip -r test-report.zip test-report.html assets
        working-directory: ${{ github.workspace }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: test-report.zip
          retention-days: 5

      - name: Slack Notification
        uses: slack/send-message-action@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          channel: your-slack-channel-name
          text: "Workflow ${{ github.workflow }} completed successfully!"
